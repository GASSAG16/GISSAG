<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="DataProbaDataSet" targetNamespace="http://tempuri.org/DataProbaDataSet.xsd" xmlns:mstns="http://tempuri.org/DataProbaDataSet.xsd" xmlns="http://tempuri.org/DataProbaDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="DataProbaConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="DataProbaConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Demo.WindowsForms.Properties.Settings.GlobalReference.Default.DataProbaConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CoordiProbTableAdapter" GeneratorDataComponentClassName="CoordiProbTableAdapter" Name="CoordiProb" UserDataComponentName="CoordiProbTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DataProbaConnectionString (Settings)" DbObjectName="dbo.CoordiProb" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[CoordiProb] WHERE (([id] = @Original_id) AND ([KoordiX] = @Original_KoordiX) AND ([KoordiY] = @Original_KoordiY))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_KoordiX" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="KoordiX" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_KoordiY" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="KoordiY" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[CoordiProb] ([KoordiX], [KoordiY]) VALUES (@KoordiX, @KoordiY);
SELECT id, KoordiX, KoordiY FROM CoordiProb WHERE (id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@KoordiX" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="KoordiX" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@KoordiY" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="KoordiY" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT id, KoordiX, KoordiY FROM dbo.CoordiProb</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[CoordiProb] SET [KoordiX] = @KoordiX, [KoordiY] = @KoordiY WHERE (([id] = @Original_id) AND ([KoordiX] = @Original_KoordiX) AND ([KoordiY] = @Original_KoordiY));
SELECT id, KoordiX, KoordiY FROM CoordiProb WHERE (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@KoordiX" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="KoordiX" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@KoordiY" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="KoordiY" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_KoordiX" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="KoordiX" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_KoordiY" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="KoordiY" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="id" DataSourceName="[G:\SWER\NEW_FOLDER\GISSAG_ALFA\DEMO.WINDOWSFORMS\FORMS\DATAPROBA.MDF].dbo.CoordiProb" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id" DataSetColumn="id" />
              <Mapping SourceColumn="KoordiX" DataSetColumn="KoordiX" />
              <Mapping SourceColumn="KoordiY" DataSetColumn="KoordiY" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="DataProbaConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorGetMethodName="GetDataBy" GeneratorSourceName="Insertret" Modifier="Public" Name="Insertret" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="Insertret">
                <InsertCommand>
                  <DbCommand CommandType="StoredProcedure" ModifiedByUser="false">
                    <CommandText>dbo.Insertret</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="ReturnValue" ParameterName="@RETURN_VALUE" Precision="10" ProviderType="Int" Scale="0" Size="4" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="float" DbType="Double" Direction="Input" ParameterName="@KoordiX" Precision="53" ProviderType="Float" Scale="0" Size="8" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="float" DbType="Double" Direction="Input" ParameterName="@KoordiY" Precision="53" ProviderType="Float" Scale="0" Size="8" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="InsertCoordiTableAdapter" GeneratorDataComponentClassName="InsertCoordiTableAdapter" Name="InsertCoordi" UserDataComponentName="InsertCoordiTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DataProbaConnectionString (Settings)" DbObjectName="dbo.InsertCoordi" DbObjectType="StoredProcedure" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="StoredProcedure" ModifiedByUser="false">
                    <CommandText>dbo.InsertCoordi</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="ReturnValue" ParameterName="@RETURN_VALUE" Precision="10" ProviderType="Int" Scale="0" Size="4" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="float" DbType="Double" Direction="Input" ParameterName="@KoordiX" Precision="53" ProviderType="Float" Scale="0" Size="8" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="float" DbType="Double" Direction="Input" ParameterName="@KoordiY" Precision="53" ProviderType="Float" Scale="0" Size="8" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="KoordiY" DataSetColumn="KoordiY" />
              <Mapping SourceColumn="KoordiY1" DataSetColumn="KoordiY1" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="InsertretTableAdapter" GeneratorDataComponentClassName="InsertretTableAdapter" Name="Insertret" UserDataComponentName="InsertretTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DataProbaConnectionString (Settings)" DbObjectName="dbo.Insertret" DbObjectType="StoredProcedure" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="StoredProcedure" ModifiedByUser="false">
                    <CommandText>dbo.Insertret</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="ReturnValue" ParameterName="@RETURN_VALUE" Precision="10" ProviderType="Int" Scale="0" Size="4" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="float" DbType="Double" Direction="Input" ParameterName="@KoordiX" Precision="53" ProviderType="Float" Scale="0" Size="8" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="float" DbType="Double" Direction="Input" ParameterName="@KoordiY" Precision="53" ProviderType="Float" Scale="0" Size="8" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id" DataSetColumn="id" />
              <Mapping SourceColumn="KoordiX" DataSetColumn="KoordiX" />
              <Mapping SourceColumn="KoordiY" DataSetColumn="KoordiY" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="DataProbaDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="DataProbaDataSet" msprop:Generator_UserDSName="DataProbaDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="CoordiProb" msprop:Generator_TableClassName="CoordiProbDataTable" msprop:Generator_TableVarName="tableCoordiProb" msprop:Generator_TablePropName="CoordiProb" msprop:Generator_RowDeletingName="CoordiProbRowDeleting" msprop:Generator_RowChangingName="CoordiProbRowChanging" msprop:Generator_RowEvHandlerName="CoordiProbRowChangeEventHandler" msprop:Generator_RowDeletedName="CoordiProbRowDeleted" msprop:Generator_UserTableName="CoordiProb" msprop:Generator_RowChangedName="CoordiProbRowChanged" msprop:Generator_RowEvArgName="CoordiProbRowChangeEvent" msprop:Generator_RowClassName="CoordiProbRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />
              <xs:element name="KoordiX" msprop:Generator_ColumnVarNameInTable="columnKoordiX" msprop:Generator_ColumnPropNameInRow="KoordiX" msprop:Generator_ColumnPropNameInTable="KoordiXColumn" msprop:Generator_UserColumnName="KoordiX" type="xs:double" />
              <xs:element name="KoordiY" msprop:Generator_ColumnVarNameInTable="columnKoordiY" msprop:Generator_ColumnPropNameInRow="KoordiY" msprop:Generator_ColumnPropNameInTable="KoordiYColumn" msprop:Generator_UserColumnName="KoordiY" type="xs:double" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="InsertCoordi" msprop:Generator_TableClassName="InsertCoordiDataTable" msprop:Generator_TableVarName="tableInsertCoordi" msprop:Generator_TablePropName="InsertCoordi" msprop:Generator_RowDeletingName="InsertCoordiRowDeleting" msprop:Generator_RowChangingName="InsertCoordiRowChanging" msprop:Generator_RowEvHandlerName="InsertCoordiRowChangeEventHandler" msprop:Generator_RowDeletedName="InsertCoordiRowDeleted" msprop:Generator_UserTableName="InsertCoordi" msprop:Generator_RowChangedName="InsertCoordiRowChanged" msprop:Generator_RowEvArgName="InsertCoordiRowChangeEvent" msprop:Generator_RowClassName="InsertCoordiRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="KoordiY" msprop:Generator_ColumnVarNameInTable="columnKoordiY" msprop:Generator_ColumnPropNameInRow="KoordiY" msprop:Generator_ColumnPropNameInTable="KoordiYColumn" msprop:Generator_UserColumnName="KoordiY" type="xs:double" />
              <xs:element name="KoordiY1" msprop:Generator_ColumnVarNameInTable="columnKoordiY1" msprop:Generator_ColumnPropNameInRow="KoordiY1" msprop:Generator_ColumnPropNameInTable="KoordiY1Column" msprop:Generator_UserColumnName="KoordiY1" type="xs:double" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Insertret" msprop:Generator_TableClassName="InsertretDataTable" msprop:Generator_TableVarName="tableInsertret" msprop:Generator_TablePropName="Insertret" msprop:Generator_RowDeletingName="InsertretRowDeleting" msprop:Generator_RowChangingName="InsertretRowChanging" msprop:Generator_RowEvHandlerName="InsertretRowChangeEventHandler" msprop:Generator_RowDeletedName="InsertretRowDeleted" msprop:Generator_UserTableName="Insertret" msprop:Generator_RowChangedName="InsertretRowChanged" msprop:Generator_RowEvArgName="InsertretRowChangeEvent" msprop:Generator_RowClassName="InsertretRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />
              <xs:element name="KoordiX" msprop:Generator_ColumnVarNameInTable="columnKoordiX" msprop:Generator_ColumnPropNameInRow="KoordiX" msprop:Generator_ColumnPropNameInTable="KoordiXColumn" msprop:Generator_UserColumnName="KoordiX" type="xs:double" />
              <xs:element name="KoordiY" msprop:Generator_ColumnVarNameInTable="columnKoordiY" msprop:Generator_ColumnPropNameInRow="KoordiY" msprop:Generator_ColumnPropNameInTable="KoordiYColumn" msprop:Generator_UserColumnName="KoordiY" type="xs:double" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:CoordiProb" />
      <xs:field xpath="mstns:id" />
    </xs:unique>
    <xs:unique name="Insertret_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Insertret" />
      <xs:field xpath="mstns:id" />
    </xs:unique>
  </xs:element>
</xs:schema>